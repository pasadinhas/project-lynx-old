package pt.ist.syllabus;import org.springframework.beans.factory.InitializingBean;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RestController;import java.util.Collection;@RestController@RequestMapping("/topic")class TopicController implements InitializingBean {    private TopicRepository topicRepository;    private SyllabusRepository syllabusRepository;    private EventRepository eventRepository;    @Autowired    public TopicController(TopicRepository topicRepository, SyllabusRepository syllabusRepository, EventRepository eventRepository) {        this.topicRepository = topicRepository;        this.syllabusRepository = syllabusRepository;        this.eventRepository = eventRepository;    }    @RequestMapping    public Collection<Syllabus> listAll(Model model) {        //model.addAttribute("topics", topicRepository.findAll());        //return "topics/list";        return syllabusRepository.findAll();    }    @RequestMapping(method = RequestMethod.POST)    public String createTopic(Topic topic) {        topicRepository.save(topic);        return "redirect:/topic";    }    @Override    public void afterPropertiesSet() throws Exception {        Topic xpto = new Topic();        xpto.setName("XPTO");        topicRepository.save(xpto);        Topic subTopic = new Topic();        subTopic.setName("subXPTO");        //subTopic.setParent(xpto);        xpto.getSubtopics().add(subTopic);        topicRepository.save(subTopic);        topicRepository.save(xpto);        Syllabus syllabus = new Syllabus();        syllabus.setName("PO");        syllabus.getTopics().add(xpto);        syllabus.getTopics().add(subTopic);        Event event = new Event();        event.setName("Event of subtopic");        eventRepository.save(event);        Event event2 = new Event();        event2.setName("Another event of subtopic");        eventRepository.save(event2);        subTopic.getEvents().add(event);        subTopic.getEvents().add(event2);        syllabusRepository.save(syllabus);        topicRepository.save(subTopic);        //topicRepository.save(xpto);    }}